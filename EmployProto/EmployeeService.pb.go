// Code generated by protoc-gen-go. DO NOT EDIT.
// source: EmployeeService.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	EmployeeService.proto

It has these top-level messages:
	EmployeeRequest
	EmployeeResponse
	EmployeeDeptRequest
	AllEmployeeResponse
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EmployeeRequest struct {
	Empid string `protobuf:"bytes,1,opt,name=empid" json:"empid,omitempty"`
}

func (m *EmployeeRequest) Reset()                    { *m = EmployeeRequest{} }
func (m *EmployeeRequest) String() string            { return proto.CompactTextString(m) }
func (*EmployeeRequest) ProtoMessage()               {}
func (*EmployeeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *EmployeeRequest) GetEmpid() string {
	if m != nil {
		return m.Empid
	}
	return ""
}

type EmployeeResponse struct {
	Empid string `protobuf:"bytes,1,opt,name=empid" json:"empid,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Dept  string `protobuf:"bytes,3,opt,name=dept" json:"dept,omitempty"`
}

func (m *EmployeeResponse) Reset()                    { *m = EmployeeResponse{} }
func (m *EmployeeResponse) String() string            { return proto.CompactTextString(m) }
func (*EmployeeResponse) ProtoMessage()               {}
func (*EmployeeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *EmployeeResponse) GetEmpid() string {
	if m != nil {
		return m.Empid
	}
	return ""
}

func (m *EmployeeResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EmployeeResponse) GetDept() string {
	if m != nil {
		return m.Dept
	}
	return ""
}

type EmployeeDeptRequest struct {
	Dept string `protobuf:"bytes,1,opt,name=dept" json:"dept,omitempty"`
}

func (m *EmployeeDeptRequest) Reset()                    { *m = EmployeeDeptRequest{} }
func (m *EmployeeDeptRequest) String() string            { return proto.CompactTextString(m) }
func (*EmployeeDeptRequest) ProtoMessage()               {}
func (*EmployeeDeptRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *EmployeeDeptRequest) GetDept() string {
	if m != nil {
		return m.Dept
	}
	return ""
}

type AllEmployeeResponse struct {
	Empid []string `protobuf:"bytes,1,rep,name=empid" json:"empid,omitempty"`
}

func (m *AllEmployeeResponse) Reset()                    { *m = AllEmployeeResponse{} }
func (m *AllEmployeeResponse) String() string            { return proto.CompactTextString(m) }
func (*AllEmployeeResponse) ProtoMessage()               {}
func (*AllEmployeeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AllEmployeeResponse) GetEmpid() []string {
	if m != nil {
		return m.Empid
	}
	return nil
}

func init() {
	proto.RegisterType((*EmployeeRequest)(nil), "protos.EmployeeRequest")
	proto.RegisterType((*EmployeeResponse)(nil), "protos.EmployeeResponse")
	proto.RegisterType((*EmployeeDeptRequest)(nil), "protos.EmployeeDeptRequest")
	proto.RegisterType((*AllEmployeeResponse)(nil), "protos.AllEmployeeResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for EmployeeService service

type EmployeeServiceClient interface {
	GetAllEmployee(ctx context.Context, in *EmployeeDeptRequest, opts ...grpc.CallOption) (*AllEmployeeResponse, error)
	GetEmployeeDetails(ctx context.Context, in *EmployeeRequest, opts ...grpc.CallOption) (*EmployeeResponse, error)
}

type employeeServiceClient struct {
	cc *grpc.ClientConn
}

func NewEmployeeServiceClient(cc *grpc.ClientConn) EmployeeServiceClient {
	return &employeeServiceClient{cc}
}

func (c *employeeServiceClient) GetAllEmployee(ctx context.Context, in *EmployeeDeptRequest, opts ...grpc.CallOption) (*AllEmployeeResponse, error) {
	out := new(AllEmployeeResponse)
	err := grpc.Invoke(ctx, "/protos.EmployeeService/getAllEmployee", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *employeeServiceClient) GetEmployeeDetails(ctx context.Context, in *EmployeeRequest, opts ...grpc.CallOption) (*EmployeeResponse, error) {
	out := new(EmployeeResponse)
	err := grpc.Invoke(ctx, "/protos.EmployeeService/getEmployeeDetails", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for EmployeeService service

type EmployeeServiceServer interface {
	GetAllEmployee(context.Context, *EmployeeDeptRequest) (*AllEmployeeResponse, error)
	GetEmployeeDetails(context.Context, *EmployeeRequest) (*EmployeeResponse, error)
}

func RegisterEmployeeServiceServer(s *grpc.Server, srv EmployeeServiceServer) {
	s.RegisterService(&_EmployeeService_serviceDesc, srv)
}

func _EmployeeService_GetAllEmployee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmployeeDeptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmployeeServiceServer).GetAllEmployee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.EmployeeService/GetAllEmployee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmployeeServiceServer).GetAllEmployee(ctx, req.(*EmployeeDeptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmployeeService_GetEmployeeDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmployeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmployeeServiceServer).GetEmployeeDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.EmployeeService/GetEmployeeDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmployeeServiceServer).GetEmployeeDetails(ctx, req.(*EmployeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmployeeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.EmployeeService",
	HandlerType: (*EmployeeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getAllEmployee",
			Handler:    _EmployeeService_GetAllEmployee_Handler,
		},
		{
			MethodName: "getEmployeeDetails",
			Handler:    _EmployeeService_GetEmployeeDetails_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "EmployeeService.proto",
}

func init() { proto.RegisterFile("EmployeeService.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x75, 0xcd, 0x2d, 0xc8,
	0xc9, 0xaf, 0x4c, 0x4d, 0x0d, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a, 0xea, 0x5c, 0xfc, 0x30, 0x05, 0x41, 0xa9, 0x85, 0xa5,
	0xa9, 0xc5, 0x25, 0x42, 0x22, 0x5c, 0xac, 0xa9, 0xb9, 0x05, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0x9c, 0x41, 0x10, 0x8e, 0x52, 0x00, 0x97, 0x00, 0x42, 0x61, 0x71, 0x41, 0x7e, 0x5e, 0x71,
	0x2a, 0x76, 0x95, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x4c, 0x60, 0x41, 0x30,
	0x1b, 0x24, 0x96, 0x92, 0x5a, 0x50, 0x22, 0xc1, 0x0c, 0x11, 0x03, 0xb1, 0x95, 0x34, 0xb9, 0x84,
	0x61, 0x26, 0xba, 0xa4, 0x16, 0x94, 0xc0, 0xac, 0x87, 0x29, 0x65, 0x44, 0x52, 0xaa, 0xcd, 0x25,
	0xec, 0x98, 0x93, 0x83, 0xcf, 0x7e, 0x66, 0xb8, 0xfd, 0x46, 0xab, 0x18, 0x11, 0x7e, 0x82, 0x7a,
	0x5a, 0xc8, 0x87, 0x8b, 0x2f, 0x3d, 0xb5, 0x04, 0xc9, 0x0c, 0x21, 0x69, 0x48, 0x40, 0x14, 0xeb,
	0x61, 0x71, 0x83, 0x14, 0x5c, 0x12, 0x8b, 0xad, 0x4a, 0x0c, 0x42, 0x9e, 0x5c, 0x42, 0xe9, 0xa9,
	0x25, 0x08, 0x8d, 0x25, 0x89, 0x99, 0x39, 0xc5, 0x42, 0xe2, 0xe8, 0x26, 0xc2, 0x4c, 0x93, 0xc0,
	0x94, 0x80, 0x19, 0x95, 0x04, 0x89, 0x07, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x30, 0xad,
	0x96, 0x47, 0xa7, 0x01, 0x00, 0x00,
}
